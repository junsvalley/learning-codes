/**************************************  
 *
 *  common compilation options
 *
 **************************************/

-L$(LIBRARY_PATH)       Link the libs under the path

-l$(LIBNAME)            link the lib, liba.so/liba.a => -la

-I$(HEAD_PATH)          Import the path

 
/**************************************  
 *
 *  gcc compilation options
 *
 **************************************/

-o                 output .out ( execute file )
-c                 output .o   ( object file )
-S                 output .s   ( assembly code )
-E                 output > file  ( pre-interpretation )

-O0                NO Optimization
-O1                Optimize compilation time and executable file size
-O2                Based on -O1, almost all kinds of optimization, but wouldn't trade space for time
-O3                Based on -O2, open more optimization option, like -finline-functions, -funswitch-loops -fgcse-after-reload

-shared            Shared library
-fPIC              Position Indepent Code, make the .so the truly indepent shared library, 
                   Not need to allocate the position for each module
           
-W                 warning, if active all warnings, use "-Wall"

-ggdb[level 1/2/3]


/**************************************  
 *
 *  ar compilation options
 *
 **************************************/

-r         Insert or replace the module (.o etc.)

-c         create whatever if it exist

-s         create index

-t         showing the objects, such as "ar -t libabc.a"

